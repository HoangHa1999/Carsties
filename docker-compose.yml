version: '3.4'

networks:
  custom:
    ipam:
      config:
        - subnet: 172.22.0.0/16

services:
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: Abc@12345
      POSTGRES_USER: postgres
      POSTGRES_DB: auction
    ports:
      - 5455:5432
    volumes:
      - /var/lib/postgresql/data
    networks:
      custom:

  mongodb:
    image: mongo
    environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: Abc12345
    ports:
      - 27017:27017
    volumes:
      - /var/lib/mongodb/data
    networks:
      custom:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      custom:

  auction-svc:
    image: hoangha1999/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    depends_on:
      - postgres
      - rabbitmq
    networks:
      custom:

  search-svc:
    image: hoangha1999/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      custom:

  bid-svc:
    image: hoangha1999/bid-svc:latest
    build:
      context: .
      dockerfile: src/BiddingService/Dockerfile
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      custom:

  identity-svc:
    image: hoangha1999/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    depends_on:
      - postgres
    networks:
      custom:
        ipv4_address: 172.22.0.199

  gateway-svc:
    image: hoangha1999/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    depends_on:
      - rabbitmq
    networks:
      custom:

  notify-svc:
    image: hoangha1999/notify-svc:latest
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    networks:
      custom:

  web-app:
    image: hoangha1999/web-app:latest
    build:
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - /var/lib/web/data
    networks:
      custom:
    
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - 80:80
      - 443:443
    networks:
      custom:
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./devcerts:/etc/nginx/certs
   
volumes:
  pgdata:
  mongodata:





